Ниже изложен алгоритм работы сервера по обработке клиентских запросов (сообщений).

--------------------------------------------------------------------------------
-- Расшифровка сообщения (общая для всех сообщений часть).
--------------------------------------------------------------------------------

1) Чтение UNP из заголовка сообщения.
   Фиксирование времени получения (для поля recive_date при обработке транзакций).
	Ошибка чтения сообщения. -> Ошибка в лог.

2) Обращение в БД для поиска ключа ЭЦП данного UNP.
	UNP не существует. -> Ошибка в лог.

3) Расшифровка сообщения.
	Сообщение не смогло быть расшифровано. -> Ошибка в лог.

Далее последовательность действий разветвляется в зависимости от типа запроса.

Запрос на проведение транзакций не требует ответа сервера.
Все остальные запросы требуют ответа.

--------------------------------------------------------------------------------
-- Запрос на проведение транзакции (CommitedTransaction).
--------------------------------------------------------------------------------

1) Сохранение информации о платёжном поручении в оперативной памяти сервера (в одной из очередей) для ожидания дальнейшей обработки.

Структура для представления транзакции в памяти сервера. Многие поля совпадают с полями соответсвующей таблицы в БД сервера.

	unp
	
	payer_acc_id char(13) not null,	
	payer_bank_bic char(9) not null,
	
	bnfc_acc_id char(13) not null,
	bnfc_bank_unp char(9) not null,
	
	amount money not null,
	
	recive_date datetime
	content varchar(4000) not null, -- нерасшифрованное сообщение
	reason varchar(1000) not null,

--------------------------------------------------------------------------------
-- Обработка транзакции из очереди (отдельный поток).
--------------------------------------------------------------------------------

Выполняется серия проверок. Если какая-то проверка не прошла, то транзакция сразу заносится в БД с соответсвующим статусом ошибки и дальнейшие проверки не осуществляются. Ошибки дублируются в лог-файлах.
Пользователь может узнать об ошибках только запросив у банка лог операций (или позвонив в банк).

1) Существуют ли аккаунты указанные в транзакции?
	а) банк плательщика не существует
	б) банк бенефициара не существует
	в) аккаунт плательщика не существует
	г) аккаунт бенефициара не существует	
2) Принадлежит ли аккаут плательщика данному UNP (автору транзакции)?
3) Не закрыты ли участники транзакций (имеют ненулевай unregistry_date):
	а) плательщик закрыт
	б) бенефициар закрыт
3) Не закрыты ли аккаунты указанные в транзакции (имеют не нулевой close_date):
	а) аккаунт плательщика закрыт
	б) аккаунт бенефициара закрыт
	
4) Проверка наличия средств на балансе плательщика.

Если все проверки прошли успешно проводятся изменения на денежных балансах участников транзакций. После этого транзакция заносится в базу со специальным статусом 0 (транзакция успешно проведена).

--------------------------------------------------------------------------------
-- Запрос состояния баланса (GetBalance).
--------------------------------------------------------------------------------

Выполняется серия проверок. Если какая-то проверка не прошла, то пользователю возвращается ошибка с описанием. Ошибки дублируются в лог-файлах.

1) Существует ли аккаунт указанный в запросе?
	а) банк не существует
	б) аккаунт не существует
2) Принадлежит ли аккаут данному UNP (автору запроса)?
3) Не закрыт ли автор запроса(имеет ненулевай unregistry_date)?
4) Не закрыт ли аккаунт указанный в сообщении(имеет ненулевой close_date)?

Далее происходит чтение баланса. Формируется ответ с результатом и отправляется клиенту.

--------------------------------------------------------------------------------
-- Запрос выписки (GetStatement) и лога операций (GetLog).
--------------------------------------------------------------------------------

Выполняется серия проверок. Если какая-то проверка не прошла, то пользователю возвращается ошибка с описанием. Ошибки дублируются в лог-файлах.

1) Существует ли аккаунт указанный в запросе?
	а) банк не существует
	б) аккаунт не существует
2) Принадлежит ли аккаут данному UNP (автору запроса)?
3) Не закрыт ли автор запроса(имеет ненулевай unregistry_date)?
4) Не закрыт ли аккаунт указанный в сообщении(имеет ненулевой close_date)?
5) Проверить правильность следования дат (дата 'ОТ' раньше даты 'ДО'). ?Как это схавает sqlite3 если этого не сделать?

Далее делается выборка из БД транзакций проведенных в указанный период. Формируется сообщение и отсылается пользователю. Преобразование выписки к читабельному виду производится на стороне клиента.

Выписка и лог отличаются друг от друга тем, что в выписке указываются только успешно проведенные операции, а в логе еще и неуспешные с описанием ошибки.

??? Как вычислить итоговый баланс, если за указанный период не проводилось ни одной транзакции.

--------------------------------------------------------------------------------
-- Конец
--------------------------------------------------------------------------------